{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let IncrementadorComponent = /*#__PURE__*/(() => {\n  class IncrementadorComponent {\n    constructor() {\n      this.progreso = 40;\n      this.btnClass = 'btn-primary';\n      this.valorSalida = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.btnClass = `btn ${this.btnClass}`;\n    }\n\n    cambiarValor(valor) {\n      if (this.progreso >= 100 && valor >= 0) {\n        this.valorSalida.emit(100);\n        return this.progreso = 100;\n      }\n\n      if (this.progreso <= 0 && valor < 0) {\n        this.valorSalida.emit(0);\n        return this.progreso = 0;\n      }\n\n      this.progreso = this.progreso + valor;\n      this.valorSalida.emit(this.progreso);\n    }\n\n    onChange(nuevoValor) {\n      if (nuevoValor >= 100) {\n        this.progreso = 100;\n      } else if (nuevoValor <= 0) {\n        this.progreso = 0;\n      } else {\n        this.progreso = nuevoValor;\n      }\n\n      this.valorSalida.emit(this.progreso);\n    }\n\n  }\n\n  IncrementadorComponent.ɵfac = function IncrementadorComponent_Factory(t) {\n    return new (t || IncrementadorComponent)();\n  };\n\n  IncrementadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncrementadorComponent,\n    selectors: [[\"app-incrementador\"]],\n    inputs: {\n      progreso: [\"valor\", \"progreso\"],\n      btnClass: \"btnClass\"\n    },\n    outputs: {\n      valorSalida: \"valor\"\n    },\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"input-group\"]],\n    template: function IncrementadorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n  return IncrementadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}